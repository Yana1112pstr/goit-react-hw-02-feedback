{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Statistics/Statistics.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","className","s","button","Section","title","children","section","Statistics","good","neutral","bad","total","positivePercentage","item","App","state","setState","prevState","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,2B,iBCAzBD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,oBCA7DD,EAAOC,QAAU,CAAC,OAAS,kC,+LCyBZC,EAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAACC,GAAD,OACX,wBAEEC,KAAK,SACLC,QAAS,kBAAMJ,EAAgB,CAAEE,YACjCG,UAAWC,IAAEC,OAJf,SAMGL,GALIA,S,gBCQAM,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,sBAAKL,UAAWC,IAAEK,QAAlB,UACE,oBAAIN,UAAWC,IAAEG,MAAjB,SAAyBA,IACxBC,M,gBCgBQE,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,+BACE,qBAAIZ,UAAWC,IAAEY,KAAjB,mBAA8BL,KAC9B,qBAAIR,UAAWC,IAAEY,KAAjB,sBAAiCJ,KACjC,qBAAIT,UAAWC,IAAEY,KAAjB,kBAA6BH,KAC7B,qBAAIV,UAAWC,IAAEY,KAAjB,oBAA+BF,KAC/B,qBAAIX,UAAWC,IAAEY,KAAjB,gCAA2CD,EAA3C,WCLAE,E,4MACJC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPf,gBAAkB,SAACE,GACjB,EAAKmB,UAAS,SAACC,GAAD,sBAAmBpB,EAASoB,EAAUpB,GAAU,O,4CAGhE,WACE,MAA+BqB,KAAKH,MAA5BP,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,gCACE,cAAC,EAAD,CAASN,MAAO,yBAAhB,SACE,cAAC,EAAD,CACEV,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBuB,KAAKvB,oBAI1B,cAAC,EAAD,CAASS,MAAO,aAAhB,SACE,cAAC,EAAD,CACEI,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOO,KAAKP,MACZC,mBAAoBM,KAAKN,8B,GA7BnBO,aAqCHL,IC/BAM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9897f300.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__3bL5A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2x1Xb\",\"title\":\"Section_title__331b1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__13WWS\"};","import React from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport s from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      {options.map((option) => (\r\n        <button\r\n          key={option}\r\n          type=\"button\"\r\n          onClick={() => onLeaveFeedback({ option })}\r\n          className={s.button}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func,\r\n  options: PropTypes.array,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div className={s.section}>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <ul>\r\n      <li className={s.item}>Good: {good}</li>\r\n      <li className={s.item}>Neutral: {neutral}</li>\r\n      <li className={s.item}>Bad: {bad}</li>\r\n      <li className={s.item}>Total: {total}</li>\r\n      <li className={s.item}>Positive Feedback: {positivePercentage}%</li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\nimport Statistics from \"./components/Statistics/Statistics.js\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = (option) => {\n    this.setState((prevState) => ({ [option]: prevState[option] + 1 }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <div>\n        <Section title={\"Please, leave feedback\"}>\n          <FeedbackOptions\n            options={[\"good\", \"neutral\", \"bad\"]}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n\n        <Section title={\"Statistics\"}>\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.total}\n            positivePercentage={this.positivePercentage}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}